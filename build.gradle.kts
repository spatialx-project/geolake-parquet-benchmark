/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    application
    id("java")
    id("com.github.johnrengelman.shadow") version "7.1.2"
}

allprojects {
    group = "com.spatialx.geolake.benchmark"
    version = "1.0-SNAPSHOT"
    repositories {
        maven {url = uri("https://maven.geotoolkit.org/")}
        mavenCentral()
        maven {url = uri("https://repo.osgeo.org/repository/release/")}
    }
}

dependencies {
    testImplementation(project(mapOf("path" to ":")))
    implementation(fileTree("libs") { include("*.jar") })

    runtimeOnly("com.google.guava:guava:31.1-jre")
    runtimeOnly("com.github.ben-manes.caffeine:caffeine:2.9.3")
    runtimeOnly("org.apache.parquet:parquet-hadoop:1.12.3")
    runtimeOnly("org.apache.parquet:parquet-avro:1.12.3") {
        exclude("it.unimi.dsi")
        exclude("org.codehaus.jackson")
    }
    runtimeOnly("org.apache.avro:avro:1.11.1")
    implementation("org.apache.arrow:arrow-vector:10.0.1") {
        exclude("com.google.code.findbugs", "jsr305")
        exclude("io.netty", "netty-common")
        exclude("io.netty",  "netty-buffer")
    }
    runtimeOnly("org.apache.arrow:arrow-memory-netty:10.0.1") {
        exclude("com.google.code.findbugs", "jsr305")
        exclude("io.netty", "netty-common")
        exclude("io.netty",  "netty-buffer")
    }
    runtimeOnly("io.netty:netty-buffer:4.1.68.Final")

    implementation("org.apache.parquet:parquet-column:1.12.3")
    implementation("org.apache.hadoop:hadoop-common:2.10.2")
    implementation("org.apache.hadoop:hadoop-mapreduce-client-core:2.10.2")
    implementation("org.locationtech.jts.io:jts-io-common:1.19.0")
    implementation("org.geotools:gt-geojson:23.3")
    testImplementation("org.junit.jupiter:junit-jupiter:5.8.2")
}

tasks.named<Test>("test") {
    useJUnitPlatform()
}

tasks{
    jar {
        manifest.attributes["Main-Class"] = "com.spatialx.geolake.benchmark.ParquetBenchmark"
        manifest.attributes["Class-Path"] = configurations
                .runtimeClasspath
                .get()
                .joinToString(separator = " ") { file ->
                    "libs/${file.name}"
                }
    }
    shadowJar {
        relocate("com.google.common", "org.apache.iceberg.relocated.com.google.common")
    }
}

tasks.processResources {
    filesMatching("**/*.geojson") {
        exclude()
    }
}


application {
    mainClassName = "com.spatialx.geolake.benchmark.ParquetBenchmark"
}
